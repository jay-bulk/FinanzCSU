// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace FinanzCSU.Models;

public partial class Team106DBContext : DbContext
{
    public Team106DBContext()
    {
    }

    public Team106DBContext(DbContextOptions<Team106DBContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Category> Categories { get; set; }

    public virtual DbSet<LoginInfo> LoginInfos { get; set; }

    public virtual DbSet<MonthlyAllocation> MonthlyAllocations { get; set; }

    public virtual DbSet<Transaction> Transactions { get; set; }

    public virtual DbSet<UserBudget> UserBudgets { get; set; }

    protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        // warning To protect potentially sensitive information in your connection string, you should move it out of source code. You can avoid scaffolding the connection string by using the Name= syntax to read it from configuration - see https://go.microsoft.com/fwlink/?linkid=2131148. For more guidance on storing connection strings, see http://go.microsoft.com/fwlink/?LinkId=723263.
        => optionsBuilder.UseSqlServer("Data Source=buscissql1901\\cisweb;Initial Catalog=Team106DB;Persist Security Info=True;User ID=javan;Password=script;Encrypt=True");

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<Category>(entity =>
        {
            entity.HasKey(e => e.CategoryID).HasName("PK__Category__19093A2BD1E87E22");
        });

        modelBuilder.Entity<LoginInfo>(entity =>
        {
            entity.HasKey(e => e.UserID).HasName("PK__LoginInf__1788CCACEFDC2D53");
        });

        modelBuilder.Entity<MonthlyAllocation>(entity =>
        {
            entity.HasKey(e => e.AllocationID).HasName("PK__MonthlyA__B3C6D6AB3675512A");

            entity.HasOne(d => d.Category).WithMany(p => p.MonthlyAllocations).HasConstraintName("CategoryAllocationFK");

            entity.HasOne(d => d.UserBudget).WithMany(p => p.MonthlyAllocations).HasConstraintName("BudgetAllocationFK");
        });

        modelBuilder.Entity<Transaction>(entity =>
        {
            entity.HasKey(e => e.TransactionID).HasName("PK__Transact__55433A4B83BC2D93");

            entity.HasOne(d => d.Category).WithMany(p => p.Transactions).HasConstraintName("CategoryTransactionFK");

            entity.HasOne(d => d.UserBudget).WithMany(p => p.Transactions).HasConstraintName("BudgetTransactionFK");
        });

        modelBuilder.Entity<UserBudget>(entity =>
        {
            entity.HasKey(e => e.UserBudgetID).HasName("PK__UserBudg__43FACCA5446904C8");

            entity.HasOne(d => d.User).WithMany(p => p.UserBudgets)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_UserID");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}